% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_data.R
\name{prepare_data}
\alias{prepare_data}
\title{Prepare the data to use}
\usage{
prepare_data(data, vars, fw = NULL, col.order = NULL)
}
\arguments{
\item{data}{A data.frame.}

\item{vars}{A vector of variable names or vector of variable numbers contained in \code{data}.}

\item{fw}{Variable name or variable number contained in \code{data} correspondent to frecuency weight in the
variable combinations of the dataset. If this variable exists then the function will change his original name
to \code{fw}. If this variable no exists then the function will compute the frecuency weight given the
variable combinations of \code{vars} and will create a new variable called \code{fw}. By default is NULL.}

\item{col.order}{A variable name or vector of variables names contained in \code{vars}, or also, a variable
number or vector of variables numbers contained in \code{vars}. Defines the columns that will use to order
the dataset.}
}
\value{
Returns a data.table.
}
\description{
Function that receive the data that later will be use to computes the index value and the
decompositions. Generates a \code{data.table} with the specificate entry variables.
}
\examples{
\dontrun{
# Considering the variable names of 'data' and that exists a variable to 'fw'.
my_data <- prepare_data(data = DF_Seg_Chile, vars = c("csep", "etnia", "school", "comuna"),
fw = "nobs")

# Considering the variable numbers of 'data' and that exists a variable to 'fw'.
my_data <- prepare_data(data = DF_Seg_Chile, vars = c(4, 5, 2, 3), fw = 10)

# Considering the variable names of 'data' and that no exists a variable to 'fw'.
my_data <- prepare_data(data = DF_Seg_Chile, vars = c("csep", "etnia", "school", "comuna"))

# Using the 'col.order' option to order data according to 'csep' column.
my_data <- prepare_data(data = DF_Seg_Chile, vars = c("csep", "etnia", "school", "comuna"),
fw = "nobs", col.order = "csep")

# The class of the resultant object in all cases must be "data.table" "data.frame".
class(my_data)
}
}
